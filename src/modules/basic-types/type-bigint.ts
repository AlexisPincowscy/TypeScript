// tipo number enorme, sem limitação de bytes
// ele consome o que tiver da memória
// funciona apenas em tipos inteiros

export const bootstrap = ():void => {
    // valores máximos do tipo int
    console.log("Int - Max Safe: ", Number.MAX_SAFE_INTEGER);
    console.log("Int - Min Safe: ", Number.MIN_SAFE_INTEGER);

    // valores max do bigint - o que a memória suportar
    let bigIntNumber: bigintn
    console.log('Atribuição com o sufixo n: ', bigIntNumber.toString())
    // dificilmente vamos usar isso, mas as tecnologias da atualidade estão vindo nesse sentido
    
    let bigIntNumber2: bigint = BigInt('9007199254740991')
    console.log('Atribuição sem o sufixo n: ', bigIntNumber2)
}